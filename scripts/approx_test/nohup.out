Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 9.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.80s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.21s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 10.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22616 row(s)
Fetched 1 row(s) in 2.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29874 row(s)
Fetched 1 row(s) in 5.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 32.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29859 row(s)
Fetched 1 row(s) in 4.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 9.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.85s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 9.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 6.80s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 14.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 5.05s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 5.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 8.20s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 6.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 7.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.63s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Permission denied (publickey).
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2957372 row(s)
Fetched 1 row(s) in 102.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29492 row(s)
Fetched 1 row(s) in 69.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 296087 row(s)
Fetched 1 row(s) in 103.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 70.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 108.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 50059 row(s)
Fetched 1 row(s) in 18.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 514 row(s)
Fetched 1 row(s) in 4.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 4900 row(s)
Fetched 1 row(s) in 8.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 532 row(s)
Fetched 1 row(s) in 4.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 5096 row(s)
Fetched 1 row(s) in 7.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2462815 row(s)
Fetched 1 row(s) in 176.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24553 row(s)
Fetched 1 row(s) in 55.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 247392 row(s)
Fetched 1 row(s) in 59.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24272 row(s)
Fetched 1 row(s) in 55.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 246293 row(s)
Fetched 1 row(s) in 54.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 1496617 row(s)
Fetched 1 row(s) in 153.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 15140 row(s)
Fetched 1 row(s) in 47.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 151144 row(s)
Fetched 1 row(s) in 103.57s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 14666 row(s)
Fetched 1 row(s) in 48.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 149359 row(s)
Fetched 1 row(s) in 89.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2464605 row(s)
Fetched 1 row(s) in 273.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24625 row(s)
Fetched 1 row(s) in 74.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 247402 row(s)
Fetched 1 row(s) in 166.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24111 row(s)
Fetched 1 row(s) in 74.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 245765 row(s)
Fetched 1 row(s) in 146.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 10.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 298 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2840 row(s)
Fetched 1 row(s) in 4.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 5.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 5.20s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 33.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2732 row(s)
Fetched 1 row(s) in 11.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29795 row(s)
Fetched 1 row(s) in 10.12s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 12.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 8.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29130 row(s)
Fetched 1 row(s) in 7.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 336 row(s)
Fetched 1 row(s) in 3.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2860 row(s)
Fetched 1 row(s) in 4.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 359 row(s)
Fetched 1 row(s) in 3.73s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 3022 row(s)
Fetched 1 row(s) in 4.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 291610 row(s)
Fetched 1 row(s) in 39.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 3102 row(s)
Fetched 1 row(s) in 15.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29075 row(s)
Fetched 1 row(s) in 15.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2702 row(s)
Fetched 1 row(s) in 15.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29276 row(s)
Fetched 1 row(s) in 17.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 39.04s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 33.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 36.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 34.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 34.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 6.75s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.25s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.29s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.09s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.31s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 57.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 44.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 42.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 42.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 47.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.63s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 22.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 14.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.23s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.10s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.75s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 17.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 15 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 6 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.01s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 2 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 3 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.22s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 18 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 2 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 14 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 17 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.67s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 13 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 119.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 34.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 106.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 49.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 99.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 10.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22616 row(s)
Fetched 1 row(s) in 2.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29874 row(s)
Fetched 1 row(s) in 3.58s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22660 row(s)
Fetched 1 row(s) in 3.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29866 row(s)
Fetched 1 row(s) in 18.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 28.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29859 row(s)
Fetched 1 row(s) in 5.80s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 9.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29882 row(s)
Fetched 1 row(s) in 9.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 25.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29625 row(s)
Fetched 1 row(s) in 8.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 2544 row(s)
Fetched 1 row(s) in 1.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16966 row(s)
Fetched 1 row(s) in 3.01s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 2542 row(s)
Fetched 1 row(s) in 3.11s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16909 row(s)
Fetched 1 row(s) in 17.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 17.31s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16879 row(s)
Fetched 1 row(s) in 2.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29597 row(s)
Fetched 1 row(s) in 3.20s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16968 row(s)
Fetched 1 row(s) in 3.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29606 row(s)
Fetched 1 row(s) in 17.80s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 16.85s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29571 row(s)
Fetched 1 row(s) in 4.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 5.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29613 row(s)
Fetched 1 row(s) in 5.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 21.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 24.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22597 row(s)
Fetched 1 row(s) in 16.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29884 row(s)
Fetched 1 row(s) in 17.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 3.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 18.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 227.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29898 row(s)
Fetched 1 row(s) in 165.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 165.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 8.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 28.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 119.62s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 104.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 105.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 106.63s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 105.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 17.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 8.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 28.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 16.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 16.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 20.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 16.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 13.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 20.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 11.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 19.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 2.09s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 3.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 1.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 18.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 3.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 3.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 19.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.23s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 19.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.57s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 67.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 64.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 64.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 63.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 65.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 10.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.70s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 12.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.05s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 12.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 15.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 6.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 10.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 3.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 3.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 14.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.19s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 11.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 4.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.19s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 16.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.22s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 38.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 36.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 35.21s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 34.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 36.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 7.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.62s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 12.05s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 9.13s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 6.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 5.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 1.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 2.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 1.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 2.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 6.67s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 1.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 1.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 7.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 1.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 6.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2957372 row(s)
Fetched 1 row(s) in 95.58s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29492 row(s)
Fetched 1 row(s) in 72.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 296087 row(s)
Fetched 1 row(s) in 102.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 72.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 101.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 50059 row(s)
Fetched 1 row(s) in 18.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 514 row(s)
Fetched 1 row(s) in 4.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 4900 row(s)
Fetched 1 row(s) in 7.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 532 row(s)
Fetched 1 row(s) in 4.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 5096 row(s)
Fetched 1 row(s) in 7.57s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2462815 row(s)
Fetched 1 row(s) in 185.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24553 row(s)
Fetched 1 row(s) in 63.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 247392 row(s)
Fetched 1 row(s) in 53.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24272 row(s)
Fetched 1 row(s) in 54.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 246293 row(s)
Fetched 1 row(s) in 53.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 1496617 row(s)
Fetched 1 row(s) in 148.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 15140 row(s)
Fetched 1 row(s) in 50.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 151144 row(s)
Fetched 1 row(s) in 108.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 14666 row(s)
Fetched 1 row(s) in 48.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 149359 row(s)
Fetched 1 row(s) in 107.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2464605 row(s)
Fetched 1 row(s) in 220.67s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24625 row(s)
Fetched 1 row(s) in 75.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 247402 row(s)
Fetched 1 row(s) in 189.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24111 row(s)
Fetched 1 row(s) in 73.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 245765 row(s)
Fetched 1 row(s) in 178.62s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 8.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 298 row(s)
Fetched 1 row(s) in 3.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2840 row(s)
Fetched 1 row(s) in 4.11s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 5.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 5.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 40.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2732 row(s)
Fetched 1 row(s) in 11.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29795 row(s)
Fetched 1 row(s) in 9.31s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 12.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 8.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29130 row(s)
Fetched 1 row(s) in 7.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 336 row(s)
Fetched 1 row(s) in 4.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2860 row(s)
Fetched 1 row(s) in 4.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 359 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 3022 row(s)
Fetched 1 row(s) in 4.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 291610 row(s)
Fetched 1 row(s) in 38.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 3102 row(s)
Fetched 1 row(s) in 14.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29075 row(s)
Fetched 1 row(s) in 15.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2702 row(s)
Fetched 1 row(s) in 15.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29276 row(s)
Fetched 1 row(s) in 12.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 41.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 37.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 34.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 33.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 36.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 6.80s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.73s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.19s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.09s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_100__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_100__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3434 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.17s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_1_1000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_1_1000__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_1_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 5.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 59.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 47.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 46.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 45.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 43.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 24.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.85s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.20s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 18.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.73s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.12s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.09s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 15 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 6 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 2 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 3 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.17s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 18 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 2 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.21s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 14 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 17 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.70s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 13 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 132.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 34.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 95.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 46.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 94.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 10.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22616 row(s)
Fetched 1 row(s) in 1.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29874 row(s)
Fetched 1 row(s) in 3.53s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22660 row(s)
Fetched 1 row(s) in 3.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29866 row(s)
Fetched 1 row(s) in 18.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 25.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29859 row(s)
Fetched 1 row(s) in 5.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 10.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29882 row(s)
Fetched 1 row(s) in 7.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 24.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29625 row(s)
Fetched 1 row(s) in 9.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 2544 row(s)
Fetched 1 row(s) in 1.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16966 row(s)
Fetched 1 row(s) in 3.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 2542 row(s)
Fetched 1 row(s) in 3.11s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16909 row(s)
Fetched 1 row(s) in 17.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 17.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16879 row(s)
Fetched 1 row(s) in 1.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29597 row(s)
Fetched 1 row(s) in 3.17s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16968 row(s)
Fetched 1 row(s) in 2.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29606 row(s)
Fetched 1 row(s) in 18.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 16.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29571 row(s)
Fetched 1 row(s) in 4.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 5.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29613 row(s)
Fetched 1 row(s) in 5.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 20.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 24.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22597 row(s)
Fetched 1 row(s) in 16.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29884 row(s)
Fetched 1 row(s) in 17.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 18.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 209.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29898 row(s)
Fetched 1 row(s) in 164.58s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 167.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 7.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 27.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 116.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 105.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 107.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 105.58s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 103.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 18.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.12s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 26.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 15.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 16.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 15.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 20.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 14.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.13s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.22s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 20.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 11.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 12.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 19.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 2.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 3.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 1.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 3.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 22.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 4.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 3.24s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 19.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.13s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.78s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 22.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.70s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 66.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 63.57s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 62.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 63.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 64.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 4.01s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 15.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.13s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 6.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 12.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 15.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 6.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 6.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 11.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 1.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 3.19s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 11.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 11.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.31s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 4.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 16.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 38.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 33.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 32.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 37.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 34.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.73s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 8.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.99s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 7.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.04s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.67s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 9.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.11s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 7.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 1.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 2.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 1.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 2.29s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 6.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 1.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 1.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.67s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 6.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 1.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.75s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 6.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.19s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.78s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_10__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_10__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_10 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 15.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_10__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_10__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_10 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_10__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_10__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_10 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_10__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_10__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_10 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 6.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_10__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_10__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_10 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 7.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 21.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.21s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.11s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 22.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.98s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 27.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 18.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 19.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 19.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 19.95s
Updated 1 partition(s) and 31 column(s).
Updated 1 partition(s) and 9 column(s).
Updated 1 partition(s) and 27 column(s).
Updated 1 partition(s) and 27 column(s).
Updated 1 partition(s) and 27 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 27 column(s).
Updated 1 partition(s) and 27 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 18 column(s).
Updated 1 partition(s) and 13 column(s).
Updated 1 partition(s) and 9 column(s).
Updated 1 partition(s) and 28 column(s).
Updated 1 partition(s) and 5 column(s).
Updated 1 partition(s) and 3 column(s).
Updated 1 partition(s) and 4 column(s).
Updated 1 partition(s) and 22 column(s).
Updated 1 partition(s) and 19 column(s).
Updated 1 partition(s) and 3 column(s).
Updated 1 partition(s) and 6 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 29 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 20 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 103 column(s).
Updated 1 partition(s) and 93 column(s).
Updated 1 partition(s) and 74 column(s).
Updated 1 partition(s) and 81 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 23 column(s).
Updated 1 partition(s) and 10 column(s).
Updated 1 partition(s) and 5 column(s).
Updated 1 partition(s) and 14 column(s).
Updated 1 partition(s) and 14 column(s).
Updated 1 partition(s) and 24 column(s).
Updated 1 partition(s) and 24 column(s).
Updated 1 partition(s) and 24 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 26 column(s).
Updated 1 partition(s) and 24 column(s).
Updated 1 partition(s) and 24 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Updated 1 partition(s) and 34 column(s).
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2957372 row(s)
Fetched 1 row(s) in 98.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29492 row(s)
Fetched 1 row(s) in 71.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 296087 row(s)
Fetched 1 row(s) in 107.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 73.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 105.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 50059 row(s)
Fetched 1 row(s) in 9.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 514 row(s)
Fetched 1 row(s) in 6.67s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 4900 row(s)
Fetched 1 row(s) in 5.12s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 532 row(s)
Fetched 1 row(s) in 6.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_10__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_10 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 5096 row(s)
Fetched 1 row(s) in 5.31s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2462815 row(s)
Fetched 1 row(s) in 89.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24553 row(s)
Fetched 1 row(s) in 57.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 247392 row(s)
Fetched 1 row(s) in 91.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24272 row(s)
Fetched 1 row(s) in 57.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_1_100__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_1_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 246293 row(s)
Fetched 1 row(s) in 91.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 1496617 row(s)
Fetched 1 row(s) in 65.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 15140 row(s)
Fetched 1 row(s) in 39.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 151144 row(s)
Fetched 1 row(s) in 74.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 14666 row(s)
Fetched 1 row(s) in 39.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_10__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_10 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 149359 row(s)
Fetched 1 row(s) in 71.57s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2464605 row(s)
Fetched 1 row(s) in 83.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24625 row(s)
Fetched 1 row(s) in 55.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 247402 row(s)
Fetched 1 row(s) in 89.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 24111 row(s)
Fetched 1 row(s) in 55.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.ss_st_q24_2_100__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM ss_st_q24_2_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 245765 row(s)
Fetched 1 row(s) in 94.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 8.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 298 row(s)
Fetched 1 row(s) in 3.58s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2840 row(s)
Fetched 1 row(s) in 4.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 5.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 5.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 38.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2732 row(s)
Fetched 1 row(s) in 11.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29795 row(s)
Fetched 1 row(s) in 9.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 28959 row(s)
Fetched 1 row(s) in 12.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 295345 row(s)
Fetched 1 row(s) in 8.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29130 row(s)
Fetched 1 row(s) in 9.09s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 336 row(s)
Fetched 1 row(s) in 3.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2860 row(s)
Fetched 1 row(s) in 4.75s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 359 row(s)
Fetched 1 row(s) in 3.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 3022 row(s)
Fetched 1 row(s) in 4.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 291610 row(s)
Fetched 1 row(s) in 42.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 3102 row(s)
Fetched 1 row(s) in 15.38s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29075 row(s)
Fetched 1 row(s) in 12.86s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 2702 row(s)
Fetched 1 row(s) in 16.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q24.store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, Sum(ss_net_profit) netpaid, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_birth_country = Upper(ca_country) AND s_zip = ca_zip AND s_market_id = 8 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
Inserted 29276 row(s)
Fetched 1 row(s) in 13.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 14.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_20__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_20__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_20 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 18.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 13.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_30__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_30__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_30 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 14.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__catalog_returns stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 23.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__catalog_returns_uf_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 23.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__catalog_returns_uf_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 19.93s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__cr_uv_1_1p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 19.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q40.cs_st_3_50__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: CREATE TABLE tpcds_q40.cs_st_3_50__cr_uv_1_10p stored as parquet as SELECT w_state , i_item_id , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) < Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_before , Sum( CASE WHEN ( Cast(d_date AS TIMESTAMP) >= Cast ('2002-06-01' AS TIMESTAMP) ) THEN cs_sales_price - COALESCE(cr_refunded_cash,0) ELSE 0 END ) AS sales_after, count(*) as groupsize FROM cs_st_3_50 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_order_number = cr_order_number AND cs_item_sk = cr_item_sk ) , warehouse , item , date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = cs_item_sk AND cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN (Cast ('2002-06-01' AS TIMESTAMP) - INTERVAL 30 day) AND ( cast ('2002-06-01' AS TIMESTAMP) + INTERVAL 30 day ) GROUP BY w_state, i_item_id ORDER BY w_state, i_item_id
Inserted 3896 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY w_state ASC, i_item_id ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 20.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 62.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 43.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 44.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 50.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 44.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.51s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 22.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_uf_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.29s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 12.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.78s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 18.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.22s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.12s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 8.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 9.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 4.14s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.47s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.07s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 15 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 6 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.25s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 0 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_1000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_1000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_1000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 2 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 10.30s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 3 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.20s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 18 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.73s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 2 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 1.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_10000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_10000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_10000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 14 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.19s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 11.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_uf_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_uf_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 17 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_uf_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_uf_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_q75_uv_1p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 13 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 2.17s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q50.ss_st_3_100000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q50.ss_st_3_100000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk <= 30  ) THEN 1 ELSE 0 END) AS 30_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 30  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 60  ) THEN 1 ELSE 0 END) AS 3160_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 60  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 90  ) THEN 1 ELSE 0 END) AS 6190_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 90  ) AND ( sr_returned_date_sk - ss_sold_date_sk <= 120  ) THEN 1 ELSE 0 END) AS 91120_days, Sum(CASE WHEN ( sr_returned_date_sk - ss_sold_date_sk > 120  ) THEN 1 ELSE 0 END) AS 120_days, count(*) as groupsize FROM ss_st_3_100000 as store_sales, store_returns_q75_uv_10p as store_returns, store, date_dim d1, date_dim d2 WHERE d2.d_year = 2002 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
Inserted 27 row(s)
WARNINGS: Ignoring ORDER BY clause without LIMIT or OFFSET: ORDER BY s_store_name ASC, s_company_id ASC, s_street_number ASC, s_street_name ASC, s_street_type ASC, s_suite_number ASC, s_city ASC, s_county ASC, s_state ASC, s_zip ASC.
An ORDER BY appearing in a view, subquery, union operand, or an insert/ctas statement has no effect on the query result unless a LIMIT and/or OFFSET is used in conjunction with the ORDER BY.

Fetched 1 row(s) in 3.21s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 117.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 35.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 99.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 37.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 98.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 10.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22616 row(s)
Fetched 1 row(s) in 2.24s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29874 row(s)
Fetched 1 row(s) in 3.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22660 row(s)
Fetched 1 row(s) in 2.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29866 row(s)
Fetched 1 row(s) in 3.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 23.37s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29859 row(s)
Fetched 1 row(s) in 5.78s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 9.04s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29882 row(s)
Fetched 1 row(s) in 5.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 9.01s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29625 row(s)
Fetched 1 row(s) in 9.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 2544 row(s)
Fetched 1 row(s) in 1.76s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16966 row(s)
Fetched 1 row(s) in 3.17s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 2542 row(s)
Fetched 1 row(s) in 1.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_100_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_100_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16909 row(s)
Fetched 1 row(s) in 2.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 16.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16879 row(s)
Fetched 1 row(s) in 2.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29597 row(s)
Fetched 1 row(s) in 3.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 16968 row(s)
Fetched 1 row(s) in 2.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_1000_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_1000_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29606 row(s)
Fetched 1 row(s) in 3.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 16.81s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29571 row(s)
Fetched 1 row(s) in 4.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 5.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29613 row(s)
Fetched 1 row(s) in 4.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.catalog_sales_st_10000_cs_item_sk__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM catalog_sales_st_10000_cs_item_sk as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 5.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 10.84s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 22597 row(s)
Fetched 1 row(s) in 2.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29884 row(s)
Fetched 1 row(s) in 3.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 2.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_1p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 3.68s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 23.85s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns_uf_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 29898 row(s)
Fetched 1 row(s) in 5.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, catalog_returns_uf_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 8.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, cr_uv_1_1p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 5.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q64.cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q64.cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT cs_item_sk, Sum(cs_ext_list_price) AS sale, Sum(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund , count(*) as groupsize FROM cs_uv_1_10p as catalog_sales, cr_uv_1_10p as catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING Sum(cs_ext_list_price) > 2 * Sum( cr_refunded_cash + cr_reversed_charge + cr_store_credit )
Inserted 30000 row(s)
Fetched 1 row(s) in 9.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 120.60s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 120.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 107.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 106.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 109.59s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 15.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.09s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.03s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 28.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 17.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 19.92s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 17.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_uf_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_uf_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 17.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 13.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.04s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.62s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.11s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_1p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_1p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 4.70s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 20.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.94s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 11.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 10.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_store_sales_q75_uv_10p__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM store_sales_q75_uv_10p as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 11.41s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 13.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 1.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 2.77s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 2.01s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 4 row(s)
Fetched 1 row(s) in 2.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 12.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.34s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 1.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_1000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_1000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 20 row(s)
Fetched 1 row(s) in 2.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 13.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.36s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_10000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_10000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.83s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 14.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_uf_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_uf_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_uf_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_uf_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.10s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_1p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_1p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 2.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q1_ss_st_3_100000__store_returns_q75_uv_10p stored as parquet as SELECT s_store_id AS store_id, Sum(ss_ext_sales_price) AS sales, Sum(COALESCE(sr_return_amt, 0)) AS returns1, Sum(ss_net_profit - COALESCE(sr_net_loss, 0)) AS profit, count(*) as groupsize FROM ss_st_3_100000 as store_sales LEFT OUTER JOIN store_returns_q75_uv_10p as store_returns ON ( ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number ), date_dim, store, item, promotion WHERE ss_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN Cast('2000-08-26' AS timestamp) AND ( Cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ss_store_sk = s_store_sk AND ss_item_sk = i_item_sk AND i_current_price > 50 AND ss_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY s_store_id
Inserted 27 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 71.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 63.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 63.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 64.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 64.50s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.79s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.95s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_1p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.22s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 13.46s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.58s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.31s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_catalog_sales_uf_10p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM catalog_sales_uf_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.25s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_1p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_1p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 13.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.55s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_uv_1_10p__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_uv_1_10p as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.48s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 7.85s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.13s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 1.71s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 356 row(s)
Fetched 1 row(s) in 2.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.87s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 1.96s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.97s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.39s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_1000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_1000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_1000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 2.89s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 9.12s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.33s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.15s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_10000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_10000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_10000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 3.61s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 13.40s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.65s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__catalog_returns_uf_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN catalog_returns_uf_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 8.10s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__cr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__cr_uv_1_1p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN cr_uv_1_1p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.69s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q2_cs_st_2_100000__cr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q2_cs_st_2_100000__cr_uv_1_10p stored as parquet as SELECT cp_catalog_page_id AS catalog_page_id, sum(cs_ext_sales_price) AS sales, sum(COALESCE(cr_return_amount, 0)) AS returns1, sum(cs_net_profit - COALESCE(cr_net_loss, 0)) AS profit, count(*) as groupsize FROM cs_st_2_100000 as catalog_sales LEFT OUTER JOIN cr_uv_1_10p as catalog_returns ON ( cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number ), date_dim, catalog_page, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND cs_catalog_page_sk = cp_catalog_page_sk AND cs_item_sk = i_item_sk AND i_current_price > 50 AND cs_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY cp_catalog_page_id
Inserted 432 row(s)
Fetched 1 row(s) in 7.72s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 37.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 35.90s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 33.44s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 38.00s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 34.42s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.63s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.57s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.91s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.43s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_1p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_1p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.16s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 7.52s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 7.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_web_sales_uf_10p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM web_sales_uf_10p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.01s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 6.49s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.04s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_1p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_1p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 3.18s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 9.25s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.10s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.26s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.32s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_uv_1_10p__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_uv_1_10p as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 4.88s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 5.28s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 1.54s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 2.27s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 1.66s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 1 row(s)
Fetched 1 row(s) in 2.02s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 5.08s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 1.82s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.25s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.05s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_1000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_1000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_1000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 14 row(s)
Fetched 1 row(s) in 2.56s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.06s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 1.78s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.35s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 1.74s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_10000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_10000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_10000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.63s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 5.10s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns_uf_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns_uf_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns_uf_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__web_returns_uf_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__web_returns_uf_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN web_returns_uf_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.64s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__wr_uv_1_1p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__wr_uv_1_1p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN wr_uv_1_1p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.45s
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: drop table if exists tpcds_q80.q3_ws_st_1_100000__wr_uv_1_10p
Starting Impala Shell without Kerberos authentication
Connected to cp-1:21000
Server version: impalad version 2.12.0-cdh5.15.1 RELEASE (build 64f4e19bf59fab8664ebff7e80fc70570dcd8cb8)
Query: use tpcds_5000_parquet
Query: create table tpcds_q80.q3_ws_st_1_100000__wr_uv_1_10p stored as parquet as SELECT web_site_id, sum(ws_ext_sales_price) AS sales, sum(COALESCE(wr_return_amt, 0)) AS returns1, sum(ws_net_profit - COALESCE(wr_net_loss, 0)) AS profit, count(*) as groupsize FROM ws_st_1_100000 as web_sales LEFT OUTER JOIN wr_uv_1_10p as web_returns ON ( ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number ), date_dim, web_site, item, promotion WHERE ws_sold_date_sk = d_date_sk AND cast(d_date as timestamp) BETWEEN cast('2000-08-26' AS timestamp) AND ( cast('2000-08-26' AS timestamp) + INTERVAL 30 day ) AND ws_web_site_sk = web_site_sk AND ws_item_sk = i_item_sk AND i_current_price > 50 AND ws_promo_sk = p_promo_sk AND p_channel_tv = 'N' GROUP BY web_site_id
Inserted 17 row(s)
Fetched 1 row(s) in 2.66s
